{
  "name": "s3-publish",
  "version": "0.0.0",
  "description": "Simple node.js application that syncs a local directory with a bucket on S3.",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "dhcole"
  },
  "license": "bsd",
  "dependencies": {
    "aws-sdk": "^2.0.25",
    "mime": "^1.2.11",
    "s3": "^4.3.1",
    "zlib": "^1.0.5"
  },
  "readme": "# s3-publish\n\nSimple node.js application that syncs a local directory with a bucket on S3.\n\nMakes serving a static website from S3 easy, especially when used with CloudFront for SSL.\n\nWorked by checking a list of remote s3 objects, comparing them with local files in a specified directory, removing files on s3 but not in the folder, and uploading new or replacing other files. Adds a caching header and applies gzip compression to specified files. \n\n## configuration\n\nSet configuration as a json file:\n\n```json\n{\n  \"bucket\": \"my.s3.bucket.name\",\n  \"directory\": \"/path/to/my/website/_site\",\n  \"compress\": \"html|css|js|json\",\n  \"cache\": \"max-age=60\"\n}\n```\n\n- `bucket` an S3 bucket\n- `directory` local directory to sync with bucket\n- `compress` regex match for files to apply gzip compression\n- `cache` `Cache-control` header value\n\nUses the AWS Javascript SDK, so it reads your AWS credentials from environment variables or a local file. [See more here](http://docs.aws.amazon.com/AWSJavaScriptSDK/guide/node-configuring.html#Setting_AWS_Credentials).\n\n## install and run\n\nRun with the config file path (e.g. `~/path-to/config.json`) as an argument.\n\n```\n$ npm install\n$ node app.js [config file]\n```\n",
  "readmeFilename": "readme.md",
  "_id": "s3-publish@0.0.0",
  "_shasum": "8429e92b7c860b5c2c72c7c61f95fc55b361db8a",
  "_resolved": "git://github.com/dhcole/s3-publish#be07254bab8d3283511628ef78607f509d01fb64",
  "_from": "git://github.com/dhcole/s3-publish",
  "_fromGithub": true
}
